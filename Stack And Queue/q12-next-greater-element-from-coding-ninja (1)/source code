import java.util.Stack;

public class Solution {
    public static int[] nextGreaterElement(int[] arr, int n) {
        // Write your code here.
        int res[] = new int[arr.length];
        Stack<Integer> st = new Stack<>();
        st.push(-1);
       
        for( int i=arr.length-1; i>=0; i--){
               res[i]=-1;
               int curr = arr[i];
               if(st.size()==0)
               st.push(curr);
               if(curr<st.peek() || st.size()==0){
                   res[i] = st.peek();
                   
               }else if( curr > st.peek()){
                    while(st.size()>0 && curr>st.peek()){
                    st.pop();
                }
                if(st.size()==0){
                    res[i]=-1;
                }else{
                    res[i] = st.peek();
                }
               }
              
                
                // res[i] = st.peek();
                // st.push(arr[i]);
                st.push(curr);
        }
    return res;

    }
}