The array-form of an integer num is an array representing its digits in left to right order.

For example, for num = 1321, the array form is [1,3,2,1].
Given num, the array-form of an integer, and an integer k, return the array-form of the integer num + k.

 

Example 1:

Input: num = [1,2,0,0], k = 34
Output: [1,2,3,4]
Explanation: 1200 + 34 = 1234
Example 2:

Input: num = [2,7,4], k = 181
Output: [4,5,5]
Explanation: 274 + 181 = 455
Example 3:

Input: num = [2,1,5], k = 806
Output: [1,0,2,1]
Explanation: 215 + 806 = 1021
 //-----------------------------------------------------------------------------------------------------------------

class Solution {
    public List<Integer> addToArrayForm(int[] arr, int k) {
        

        int i=0;
		int j=arr.length;
		int t=j-1;
		int x=1;
		int sum = 0;
		while(j>0){
		    int val = arr[t--];
		    sum = sum+(val * x);
		    x=x*10;
		    j--;
		    
		}
	//	System.out.println("sum is "+sum);
		
		// we have to add some digit into the sum 
		//int k=38;
		int total = sum + k;
// 		System.out.println(total );

     // count the digit of the number 
     int temp = total;
     int c=0;
     while(temp!=0){
         c++;
         temp = temp/10;
     }

    //System.out.println(c);
    
    // now we will create the same size Array
    int r[] = new int[c];
    int e = c-1;
    int temp1 = total;
    
    while(temp1 > 0){
        int res = temp1%10;
        r[e--] =res;
        temp1 = temp1/10;
    }
      List al = Arrays.asList(r);

      return al;

    
    }
}
//-----------------------------------------------------------------------------------------
way 2

class Solution {
    public List<Integer> addToArrayForm(int[] arr, int k) {
         ArrayList<Integer> ans = new ArrayList<>();
        int i=num.length;
        while(i>0 || k!=0)
        {
            if(i>0)
                k+=num[--i];

            ans.add(k%10);
            k/=10;
        }
        Collections.reverse(ans);
        return ans;
    }
}
